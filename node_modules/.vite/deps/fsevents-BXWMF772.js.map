{
  "version": 3,
  "sources": ["../../fsevents/fsevents.js"],
  "sourcesContent": ["/*\n ** Â© 2020 by Philipp Dunkel, Ben Noordhuis, Elan Shankar, Paul Miller\n ** Licensed under MIT License.\n */\n\n/* jshint node:true */\n\"use strict\";\n\nif (process.platform !== \"darwin\") {\n  throw new Error(`Module 'fsevents' is not compatible with platform '${process.platform}'`);\n}\n\n// const Native = require(\"./fsevents.node\");\n// const events = Native.constants;\n\nfunction watch(path, since, handler) {\n  if (typeof path !== \"string\") {\n    throw new TypeError(`fsevents argument 1 must be a string and not a ${typeof path}`);\n  }\n  if (\"function\" === typeof since && \"undefined\" === typeof handler) {\n    handler = since;\n    since = Native.flags.SinceNow;\n  }\n  if (typeof since !== \"number\") {\n    throw new TypeError(`fsevents argument 2 must be a number and not a ${typeof since}`);\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(`fsevents argument 3 must be a function and not a ${typeof handler}`);\n  }\n\n  let instance = Native.start(Native.global, path, since, handler);\n  if (!instance) throw new Error(`could not watch: ${path}`);\n  return () => {\n    const result = instance ? Promise.resolve(instance).then(Native.stop) : Promise.resolve(undefined);\n    instance = undefined;\n    return result;\n  };\n}\n\nfunction getInfo(path, flags) {\n  return {\n    path,\n    flags,\n    event: getEventType(flags),\n    type: getFileType(flags),\n    changes: getFileChanges(flags),\n  };\n}\n\nfunction getFileType(flags) {\n  if (events.ItemIsFile & flags) return \"file\";\n  if (events.ItemIsDir & flags) return \"directory\";\n  if (events.ItemIsSymlink & flags) return \"symlink\";\n}\nfunction anyIsTrue(obj) {\n  for (let key in obj) {\n    if (obj[key]) return true;\n  }\n  return false;\n}\nfunction getEventType(flags) {\n  if (events.ItemRemoved & flags) return \"deleted\";\n  if (events.ItemRenamed & flags) return \"moved\";\n  if (events.ItemCreated & flags) return \"created\";\n  if (events.ItemModified & flags) return \"modified\";\n  if (events.RootChanged & flags) return \"root-changed\";\n  if (events.ItemCloned & flags) return \"cloned\";\n  if (anyIsTrue(flags)) return \"modified\";\n  return \"unknown\";\n}\nfunction getFileChanges(flags) {\n  return {\n    inode: !!(events.ItemInodeMetaMod & flags),\n    finder: !!(events.ItemFinderInfoMod & flags),\n    access: !!(events.ItemChangeOwner & flags),\n    xattrs: !!(events.ItemXattrMod & flags),\n  };\n}\n\nexports.watch = watch;\nexports.getInfo = getInfo;\nexports.constants = events;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAQA,QAAI,QAAQ,aAAa,UAAU;AACjC,YAAM,IAAI,MAAM,sDAAsD,QAAQ,QAAQ,GAAG;AAAA,IAC3F;AAKA,aAAS,MAAM,MAAM,OAAO,SAAS;AACnC,UAAI,OAAO,SAAS,UAAU;AAC5B,cAAM,IAAI,UAAU,kDAAkD,OAAO,IAAI,EAAE;AAAA,MACrF;AACA,UAAI,eAAe,OAAO,SAAS,gBAAgB,OAAO,SAAS;AACjE,kBAAU;AACV,gBAAQ,OAAO,MAAM;AAAA,MACvB;AACA,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,UAAU,kDAAkD,OAAO,KAAK,EAAE;AAAA,MACtF;AACA,UAAI,OAAO,YAAY,YAAY;AACjC,cAAM,IAAI,UAAU,oDAAoD,OAAO,OAAO,EAAE;AAAA,MAC1F;AAEA,UAAI,WAAW,OAAO,MAAM,OAAO,QAAQ,MAAM,OAAO,OAAO;AAC/D,UAAI,CAAC;AAAU,cAAM,IAAI,MAAM,oBAAoB,IAAI,EAAE;AACzD,aAAO,MAAM;AACX,cAAM,SAAS,WAAW,QAAQ,QAAQ,QAAQ,EAAE,KAAK,OAAO,IAAI,IAAI,QAAQ,QAAQ,MAAS;AACjG,mBAAW;AACX,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,QAAQ,MAAM,OAAO;AAC5B,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,OAAO,aAAa,KAAK;AAAA,QACzB,MAAM,YAAY,KAAK;AAAA,QACvB,SAAS,eAAe,KAAK;AAAA,MAC/B;AAAA,IACF;AAEA,aAAS,YAAY,OAAO;AAC1B,UAAI,OAAO,aAAa;AAAO,eAAO;AACtC,UAAI,OAAO,YAAY;AAAO,eAAO;AACrC,UAAI,OAAO,gBAAgB;AAAO,eAAO;AAAA,IAC3C;AACA,aAAS,UAAU,KAAK;AACtB,eAAS,OAAO,KAAK;AACnB,YAAI,IAAI,GAAG;AAAG,iBAAO;AAAA,MACvB;AACA,aAAO;AAAA,IACT;AACA,aAAS,aAAa,OAAO;AAC3B,UAAI,OAAO,cAAc;AAAO,eAAO;AACvC,UAAI,OAAO,cAAc;AAAO,eAAO;AACvC,UAAI,OAAO,cAAc;AAAO,eAAO;AACvC,UAAI,OAAO,eAAe;AAAO,eAAO;AACxC,UAAI,OAAO,cAAc;AAAO,eAAO;AACvC,UAAI,OAAO,aAAa;AAAO,eAAO;AACtC,UAAI,UAAU,KAAK;AAAG,eAAO;AAC7B,aAAO;AAAA,IACT;AACA,aAAS,eAAe,OAAO;AAC7B,aAAO;AAAA,QACL,OAAO,CAAC,EAAE,OAAO,mBAAmB;AAAA,QACpC,QAAQ,CAAC,EAAE,OAAO,oBAAoB;AAAA,QACtC,QAAQ,CAAC,EAAE,OAAO,kBAAkB;AAAA,QACpC,QAAQ,CAAC,EAAE,OAAO,eAAe;AAAA,MACnC;AAAA,IACF;AAEA,YAAQ,QAAQ;AAChB,YAAQ,UAAU;AAClB,YAAQ,YAAY;AAAA;AAAA;",
  "names": []
}
